{"version":3,"sources":["img/ather.png","svg/steeringWheel.svg","components/Navbar.js","reducers/actionTypes.js","reducers/graphTypes.js","reducers/store.js","reducers/reducer.js","functions/makeQuery.js","components/Form.js","reducers/actionCreators.js","components/Graph.js","components/Conclusion.js","components/Model.js","components/Footer.js","components/FontAwesomeIcons.js","App.js","index.js"],"names":["Navbar","className","src","ather","alt","steeringWheel","href","SET_X_DETAILS","SET_GRAPH_DETAILS","SOC","store","createStore","state","vehicleId","date","time","graph_type","action","type","payload","graph","makeQuery","dataRqst","a","console","log","body","JSON","stringify","fetch","method","headers","response","json","data","message","Form","subscribe","handleSubmit","e","preventDefault","createFormat","startYear","endYear","startMonth","endMonth","startDay","endDay","startHour","endHour","startMinute","endMinute","startSecond","endSecond","xDetails","split","dispatch","updateXDetails","getState","sv1","ev1","sv2","ev2","sv3","ev3","delim","useState","setvehicleId","setstartYear","setendYear","setstartMonth","setendMonth","setstartDay","setendDay","setstartHour","setendHour","setstartMinute","setendMinute","setstartSecond","setendSecond","onSubmit","htmlFor","onChange","target","value","min","max","name","id","placeholder","required","Graph","handleClick","string","onClick","icon","Conclusion","Model","Footer","rel","library","add","faCarBattery","faBatteryHalf","faSpinner","faDirections","faAtom","faBolt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.867642bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ather.8f960213.png\";","export default __webpack_public_path__ + \"static/media/steeringWheel.040ed50d.svg\";","import React from 'react'\r\nimport ather from '../img/ather.png'\r\nimport steeringWheel from '../svg/steeringWheel.svg'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"logo\">\r\n                <img src={ather} alt=\"Ather\"/>\r\n            </div>\r\n            <div className=\"brand\">\r\n                <div className=\"steering\">\r\n                    <img src={steeringWheel} alt=\"\"/>\r\n                </div>\r\n                <span className=\"text dash\">DASH</span>\r\n                <span className=\"text\">BOARD</span>\r\n            </div>\r\n            <div className=\"navLinks\">\r\n                <a href=\"/\">Dash</a>\r\n                <a href=\"/data\">Data</a>\r\n                <a href=\"/about\">About</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const SET_X_DETAILS = \"SET_X_DETAILS\"\r\nexport const SET_GRAPH_DETAILS = \"SET_GRAPH_DETAILS\"","export const ENERGY_REGEN = \"regen_power\";\r\nexport const SOC = \"soc\";\r\nexport const BATTERY_TEMP = \"battery_temp\"\r\nexport const DIST_TRAVELLED = \"dist_from_start\"\r\nexport const ENERGY_CONS = \"e_consumed\"\r\nexport const DISCHARGE_CYCLES = \"charging\"","import {createStore} from 'redux';\r\nimport {reducer} from './reducer'\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import {SET_X_DETAILS, SET_GRAPH_DETAILS} from './actionTypes'\r\nimport {SOC} from '../reducers/graphTypes'\r\n\r\nexport const reducer = (state= {\r\n    vehicleId:['1','2'],\r\n    date:[],\r\n    time:[],\r\n    graph_type:SOC,\r\n    }, action) => {\r\n    switch(action.type){\r\n        case SET_X_DETAILS:\r\n            return {\r\n                ...state,\r\n                vehicleId:action.payload.vehicleId,\r\n                date:action.payload.date,\r\n                time:action.payload.time\r\n            }\r\n        case SET_GRAPH_DETAILS:\r\n            return{\r\n                ...state,\r\n                graph_type:action.payload.graph,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","// FOR DEVELOPMENT\r\nlet url = 'http://localhost:5000/api'\r\n\r\n// FOR PRODUCTION\r\n// url = 'https://https://rfr-21-dashboard.herokuapp.com//api'\r\n\r\nexport const makeQuery = async(dataRqst) => {\r\n    console.log(dataRqst);\r\n    const body = JSON.stringify(dataRqst);\r\n    console.log(body);\r\n    try {\r\n        const response = await fetch(url,{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:body\r\n        })\r\n        const data = await response.json();\r\n        console.log(data);\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n","import React, {useState} from 'react';\r\nimport store from '../reducers/store'\r\nimport {updateXDetails} from '../reducers/actionCreators'\r\nimport {makeQuery} from '../functions/makeQuery'\r\n\r\nexport default function Form() {\r\n    // eslint-disable-next-line\r\n    const unsubscribe = store.subscribe(()=>{\r\n        // console.log('State was just changed !', store.getState());\r\n        console.log('--------------------------------------');\r\n    })\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Form was just submitted');\r\n        // console.log(vehicleId, startYear, endYear, startMonth, endMonth, startDay, endDay);\r\n        const date = createFormat(startYear, endYear, startMonth, endMonth, startDay, endDay,'/');\r\n        const time = createFormat(startHour, endHour,startMinute,endMinute,startSecond,endSecond,':');\r\n\r\n        const xDetails = {\r\n            vehicleId:vehicleId.split(','),\r\n            date,\r\n            time\r\n        }\r\n\r\n        // console.log(xDetails)\r\n        store.dispatch(updateXDetails(xDetails))\r\n        makeQuery(store.getState());\r\n    }\r\n\r\n    const createFormat = (sv1,ev1,sv2,ev2,sv3,ev3,delim)=>{\r\n        const startPart = `${sv3}${delim}${sv2}${delim}${sv1}`;\r\n        const endPart = `${ev3}${delim}${ev2}${delim}${ev1}`;\r\n        return [startPart, endPart];\r\n    }\r\n\r\n    const [vehicleId, setvehicleId] = useState('');\r\n    const [startYear, setstartYear] = useState('');\r\n    const [endYear, setendYear] = useState('');\r\n    const [startMonth, setstartMonth] = useState('');\r\n    const [endMonth, setendMonth] = useState('');\r\n    const [startDay, setstartDay] = useState('');\r\n    const [endDay, setendDay] = useState('');\r\n    \r\n    const [startHour, setstartHour] = useState('');\r\n    const [endHour, setendHour] = useState('');\r\n    const [startMinute, setstartMinute] = useState('');\r\n    const [endMinute, setendMinute] = useState('');\r\n    const [startSecond, setstartSecond] = useState('');\r\n    const [endSecond, setendSecond] = useState('');\r\n    \r\n\r\n    return (\r\n        <div className=\"input-form\">\r\n            <h2>Input Details</h2>\r\n            <form  onSubmit={(e)=>handleSubmit(e)} className=\"form\">\r\n                <div className=\"date-duration\">\r\n                    <label htmlFor=\"date-duration\" className=\"form-label\">Select Day, Date, Time</label>\r\n                    <p className=\"input-info\">The vehicle data will be analyzed, averaged and graphed as per the specified day, month or year time interval. <br/> <br/> Eg : Between 1/2/2020 and 3/2/2020 </p>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>YEAR</th>\r\n                                <th>MONTH</th>\r\n                                <th>DAY</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p>Enter the start and end year in YYYY format</p>\r\n                                    <input onChange={(e)=>{setstartYear(e.target.value)}} value={startYear}  type=\"number\" min='2001' max='2020' name=\"start-year\" id=\"start-year\" className=\"form-input\" placeholder=\"Eg : 2019\"/>\r\n                                    <input onChange={(e)=>{setendYear(e.target.value)}} value={endYear}  type=\"number\" min='2001' max='2020' name=\"end-year\" id=\"end-year\" className=\"form-input\" placeholder=\"Eg : 2020\"/>\r\n                                </td>\r\n                                <td>\r\n                                    <p>Enter the start and end month in MM format</p>\r\n                                    <input onChange={(e)=>{setstartMonth(e.target.value)}} value={startMonth}  type=\"number\" min='1' max='12' name=\"start-month\" id=\"start-month\" className=\"form-input\" placeholder=\"Eg : 02\"/>\r\n                                    <input onChange={(e)=>{setendMonth(e.target.value)}} value={endMonth}  type=\"number\" min='1' max='12' name=\"end-month\" id=\"end-month\" className=\"form-input\" placeholder=\"Eg : 03\"/>\r\n                                </td>\r\n                                <td>\r\n                                    <p>Enter the start and end day in DD format</p>\r\n                                    <input onChange={(e)=>{setstartDay(e.target.value)}} value={startDay}  type=\"number\" min='1' max='31' name=\"start-day\" id=\"start-day\" className=\"form-input\" placeholder=\"Eg : 01\"/>\r\n                                    <input onChange={(e)=>{setendDay(e.target.value)}} value={endDay}  type=\"number\" min='1' max='31' name=\"end-day\" id=\"end-day\" className=\"form-input\" placeholder=\"Eg : 18\"/>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"vehicle-id\">\r\n                    <label htmlFor=\"vehicle-id\" className=\"form-label\">Set Vehicle ID</label>\r\n                    <p className=\"input-info\">Enter an array of vehicle IDs <br/>Eg : EV20201, EV20202, EV20203 </p>\r\n                    <input onChange={(e)=>{setvehicleId(e.target.value)}} value={vehicleId} required type=\"text\" name=\"vehicle-id\" id=\"vehicle-id\" className=\"form-input\" placeholder=\"Eg : EV20201, EV20202\"/>\r\n                </div>                \r\n                <div className=\"time-duration\">\r\n                    <p className=\"form-label\">Select Time Duration</p>\r\n                    <p className=\"input-info\">Given a day, the data can be visualized differently as per different time intervals. For date durations bigger than day, entire day's data will be returned <br/> <br/> Eg : Between 14:30:30 and 15:30:00 on 13/12/2020 </p>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>HOUR</th>\r\n                                <th>MINUTE</th>\r\n                                <th>SECOND</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p>Enter the start and end hour in HH format</p>\r\n                                    <input onChange={(e)=>{setstartHour(e.target.value)}} value={startHour}  type=\"number\" min='01' max='24' name=\"start-hr\" id=\"start-hr\" className=\"form-input\" placeholder=\"Eg : 02\"/>\r\n                                    <input onChange={(e)=>{setendHour(e.target.value)}} value={endHour}  type=\"number\" min='01' max='24' name=\"end-hr\" id=\"end-hr\" className=\"form-input\" placeholder=\"Eg : 16\"/>\r\n                                </td>\r\n                                <td>\r\n                                    <p>Enter the start and end minute in MM format</p>\r\n                                    <input onChange={(e)=>{setstartMinute(e.target.value)}} value={startMinute}  type=\"number\" min='1' max='60' name=\"start-min\" id=\"start-min\" className=\"form-input\" placeholder=\"Eg : 02\"/>\r\n                                    <input onChange={(e)=>{setendMinute(e.target.value)}} value={endMinute}  type=\"number\" min='1' max='60' name=\"end-min\" id=\"end-min\" className=\"form-input\" placeholder=\"Eg : 03\"/>\r\n                                </td>\r\n                                <td>\r\n                                    <p>Enter the start and end second in SS format</p>\r\n                                    <input onChange={(e)=>{setstartSecond(e.target.value)}} value={startSecond}  type=\"number\" min='1' max='60' name=\"start-sec\" id=\"start-sec\" className=\"form-input\" placeholder=\"Eg : 01\"/>\r\n                                    <input onChange={(e)=>{setendSecond(e.target.value)}} value={endSecond}  type=\"number\" min='1' max='60' name=\"end-sec\" id=\"end-sec\" className=\"form-input\" placeholder=\"Eg : 18\"/>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"submit-n-err\">\r\n                    <div className=\"error-box\">This is where errors will be shown</div>        \r\n                    <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import {SET_X_DETAILS, SET_GRAPH_DETAILS} from \"./actionTypes\"\r\n\r\nexport const updateXDetails = (xDetails) => ({\r\n    type:SET_X_DETAILS, \r\n    payload:xDetails\r\n})\r\n\r\nexport const updateGraphDetails = (graph) => ({\r\n    type:SET_GRAPH_DETAILS, \r\n    payload:{graph}\r\n})","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {ENERGY_REGEN,SOC, BATTERY_TEMP, DIST_TRAVELLED, ENERGY_CONS, DISCHARGE_CYCLES} from '../reducers/graphTypes'\r\nimport {updateGraphDetails} from '../reducers/actionCreators'\r\nimport store from '../reducers/store'\r\nimport {makeQuery} from '../functions/makeQuery'\r\n\r\nexport default function Graph() { \r\n    // eslint-disable-next-line\r\n    const unsubscribe = store.subscribe(()=>{\r\n        // console.log('State was just changed !', store.getState());\r\n        console.log('--------------------------------------');\r\n    })\r\n    // console.log(unsubscribe);\r\n    const handleClick = (string) => {\r\n        console.log(string);\r\n        store.dispatch(updateGraphDetails(string))\r\n        makeQuery(store.getState())\r\n    }\r\n\r\n    return (\r\n        <div  className=\"graph-container\">\r\n            <h2>GRAPH</h2>\r\n            <table className=\"graph-info\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"left-top\">Meaning</th>\r\n                    <th>Y-Axis</th>\r\n                    <th className=\"right-top\">X-Axis</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>Indicates battery charge remaining over time</td>\r\n                    <td>SOC (State of charge)</td>\r\n                    <td>Time</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Indicates energy gained while braking over time</td>\r\n                    <td>E Regen</td>\r\n                    <td>Time</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Indicates temperature of battery over time</td>\r\n                    <td>Battery temp</td>\r\n                    <td>Time</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Indicates energy consumed over time</td>\r\n                    <td>E cons</td>\r\n                    <td>Time</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Indicates distance travelled over time</td>\r\n                    <td>Dist travelled</td>\r\n                    <td>Time</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"left-bottom\">Indicates number of charging, discharging events over time</td>\r\n                    <td>Discharge cycles</td>\r\n                    <td className=\"right-bottom\">Time</td>\r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n            <div className=\"graph\">\r\n                <div className=\"graph-plot section-1\">\r\n                    <h3>Graph Plot</h3>\r\n                    <div className=\"canvas-container\">\r\n                        <canvas></canvas>\r\n                    </div>\r\n                </div>\r\n                <div className=\"graph-options section-2\">\r\n                    <h3>Choose a graph</h3>\r\n                    <div className=\"choose-graph\">\r\n                        <button onClick={()=>handleClick(SOC)} className=\"graph-btn\"><FontAwesomeIcon icon=\"bolt\"></FontAwesomeIcon>&nbsp; SOC <span>VS</span> time</button>\r\n                        <button onClick={()=>handleClick(BATTERY_TEMP)} className=\"graph-btn\"><FontAwesomeIcon icon=\"car-battery\"></FontAwesomeIcon>&nbsp; Battery temp <span>VS</span> time</button>\r\n                        <button onClick={()=>handleClick(ENERGY_REGEN)} className=\"graph-btn\"><FontAwesomeIcon icon=\"atom\"></FontAwesomeIcon>&nbsp; Energy <span>VS</span> time</button>\r\n                        <button onClick={()=>handleClick(DIST_TRAVELLED)} className=\"graph-btn\"><FontAwesomeIcon icon=\"directions\"></FontAwesomeIcon>&nbsp; Dist travelled <span>VS</span> time </button>\r\n                        <button onClick={()=>handleClick(ENERGY_CONS)} className=\"graph-btn\"><FontAwesomeIcon icon=\"battery-half\"></FontAwesomeIcon>&nbsp; Energy cons <span>VS</span> time </button>\r\n                        <button onClick={()=>handleClick(DISCHARGE_CYCLES)} className=\"graph-btn\"><FontAwesomeIcon icon=\"spinner\"></FontAwesomeIcon>&nbsp; Discharge cycles <span>VS</span> time</button>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Conclusion() {\r\n    return (\r\n        <div className=\"conclusion\">\r\n            <h2>CONCLUSION</h2>\r\n            <div className=\"graph-conclude\">\r\n                <div className=\"formulae section-2\">\r\n                    <h3>Formulae</h3> \r\n                </div>\r\n                <div className=\"graph-plot section-1\">\r\n                    <h3>Result</h3>\r\n                    <div className=\"canvas-container\">\r\n                        <canvas></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Model() {\r\n    return (\r\n        <div className=\"model-container\">\r\n            <h2>Model</h2>\r\n            <div className=\"model\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            The Dashboard Project. By <a className=\"by-rfr\" target=\"_blank\" rel=\"noreferrer\" href=\"http://cfi.iitm.ac.in/raftar/\"> &nbsp; Raftar Formula Racing, IIT Madras </a>\r\n        </div>\r\n    )\r\n}\r\n","import {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCarBattery, faBatteryHalf, faSpinner, faDirections, faAtom, faBolt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faCarBattery, faBatteryHalf, faSpinner, faDirections, faAtom, faBolt)","import './styles/App.css';\nimport Navbar from './components/Navbar'\nimport Form from './components/Form'\nimport Graph from './components/Graph'\nimport Conclusion from './components/Conclusion'\nimport Model from './components/Model'\nimport Footer from './components/Footer'\nimport \"./components/FontAwesomeIcons\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Form/>\n      <Graph/>\n      <Conclusion/>\n      <Model/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}