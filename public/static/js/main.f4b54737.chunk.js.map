{"version":3,"sources":["img/ather.png","components/Navbar.js","reducers/actionTypes.js","reducers/graphTypes.js","reducers/store.js","reducers/reducer.js","components/Form.js","reducers/actionCreators.js","functions/makeQuery.js","charts/Chart1.js","components/Graph.js","charts/Chart3.js","charts/GraphPlot.js","components/Conclusion.js","components/Model.js","components/Footer.js","components/FontAwesomeIcons.js","context/ChartContext.js","App.js","index.js"],"names":["Navbar","className","src","ather","alt","href","SET_X_DETAILS","SET_GRAPH_DETAILS","ENERGY_CONS","store","createStore","state","idRqst","dateRqst","timeRqst","plotRqst","action","type","payload","graph","Form","handleSubmit","e","preventDefault","console","log","date","createDate","startYear","endYear","startMonth","endMonth","startDay","endDay","time","createTime","startHour","endHour","startMinute","endMinute","startSecond","endSecond","xDetails","startVehicleId","endVehicleId","dispatch","updateXDetails","sv1","ev1","sv2","ev2","sv3","ev3","delim","useState","setstartVehicleId","setendVehicleId","setstartYear","setendYear","setstartMonth","setendMonth","setstartDay","setendDay","setstartHour","setendHour","setstartMinute","setendMinute","setstartSecond","setendSecond","onSubmit","htmlFor","onChange","target","value","required","min","max","name","id","placeholder","makeQuery","dataRqst","a","body","JSON","stringify","fetch","method","headers","response","json","data","message","Chart1","labels","setLabels","datasets","setDatasets","chartData","useEffect","subscribe","requestBody","getState","setChart","postArray","Array","from","map","post","xAxis","label","borderColor","mean","height","width","options","maintainAspectRatio","Graph","handleClick","string","onClick","icon","Chart2","GraphPlot","Conclusion","Model","Footer","rel","config","url","library","add","faCarBattery","faBatteryHalf","faSpinner","faDirections","faAtom","faBolt","ChartContext","React","createContext","ChartProvider","children","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4b54737.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ather.8f960213.png\";","import React from 'react'\r\nimport ather from '../img/ather.png'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"logo\">\r\n                <img src={ather} alt=\"Ather\"/>\r\n            </div>\r\n            <div className=\"brand\">\r\n                <span className=\"text dash\">DASH</span>\r\n                <span className=\"text\">BOARD</span>\r\n            </div>\r\n            <div className=\"navLinks\">\r\n                <a href=\"/\">Dash</a>\r\n                <a href=\"/data\">Data</a>\r\n                <a href=\"/about\">About</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const SET_X_DETAILS = \"SET_X_DETAILS\"\r\nexport const SET_GRAPH_DETAILS = \"SET_GRAPH_DETAILS\"","export const ENERGY_REGEN = \"regen\";\r\nexport const SOC = \"soc\";\r\nexport const BATTERY_TEMP = \"temperature\"\r\nexport const DIST_TRAVELLED = \"distance\"\r\nexport const ENERGY_CONS = \"energy\"\r\nexport const DISCHARGE_CYCLES = \"charging\"","import {createStore} from 'redux';\r\nimport {reducer} from './reducer'\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import {SET_X_DETAILS, SET_GRAPH_DETAILS} from './actionTypes'\r\nimport {ENERGY_CONS} from '../reducers/graphTypes'\r\n\r\nexport const reducer = (state= {\r\n    idRqst:['EV20201'],\r\n    dateRqst:['01/01/2020','28/12/2020'],\r\n    timeRqst:['00:00:00','23:59:59'],\r\n    plotRqst:ENERGY_CONS,\r\n    }, action) => {\r\n    switch(action.type){\r\n        case SET_X_DETAILS:\r\n            // console.log('X details changed !')\r\n            return {\r\n                ...state,\r\n                idRqst:action.payload.idRqst,\r\n                dateRqst:action.payload.dateRqst,\r\n                timeRqst:action.payload.timeRqst\r\n            }\r\n        case SET_GRAPH_DETAILS:\r\n            // console.log('Graph details changed !')\r\n            return{\r\n                ...state,\r\n                plotRqst:action.payload.graph,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport store from '../reducers/store'\r\nimport {updateXDetails} from '../reducers/actionCreators'\r\n\r\nexport default function Form() {\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Form was just submitted');\r\n        // console.log(vehicleId, startYear, endYear, startMonth, endMonth, startDay, endDay);\r\n        const date = createDate(startYear, endYear, startMonth, endMonth, startDay, endDay,'/');\r\n        const time = createTime(startHour, endHour,startMinute,endMinute,startSecond,endSecond,':');\r\n        const xDetails = {\r\n            idRqst:[startVehicleId,endVehicleId],\r\n            dateRqst:date,\r\n            timeRqst:time\r\n        }\r\n\r\n        store.dispatch(updateXDetails(xDetails))\r\n    }\r\n\r\n    const createDate = (sv1,ev1,sv2,ev2,sv3,ev3,delim)=>{\r\n        if(sv2===''){sv2='01'}\r\n        if(sv3===''){sv3='01'}\r\n        if(ev2===''){ev2='12'}\r\n        if(ev3===''){ev3='28'}\r\n        const startPart = `${sv3}${delim}${sv2}${delim}${sv1}`;\r\n        const endPart = `${ev3}${delim}${ev2}${delim}${ev1}`;\r\n        return [startPart, endPart];\r\n    }\r\n    const createTime = (sv1,ev1,sv2,ev2,sv3,ev3,delim)=>{\r\n        if(sv1===''){sv1='00'}\r\n        if(sv2===''){sv2='00'}\r\n        if(sv3===''){sv3='00'}\r\n        if(ev1===''){ev1='59'}\r\n        if(ev2===''){ev2='59'}\r\n        if(ev3===''){ev3='23'}\r\n        \r\n        const startPart = `${sv3}${delim}${sv2}${delim}${sv1}`;\r\n        const endPart = `${ev3}${delim}${ev2}${delim}${ev1}`;\r\n        return [startPart, endPart];\r\n    }\r\n\r\n    const [startVehicleId, setstartVehicleId] = useState('');\r\n    const [endVehicleId, setendVehicleId] = useState('');\r\n    const [startYear, setstartYear] = useState('');\r\n    const [endYear, setendYear] = useState('');\r\n    const [startMonth, setstartMonth] = useState('');\r\n    const [endMonth, setendMonth] = useState('');\r\n    const [startDay, setstartDay] = useState('');\r\n    const [endDay, setendDay] = useState('');\r\n    \r\n    const [startHour, setstartHour] = useState('');\r\n    const [endHour, setendHour] = useState('');\r\n    const [startMinute, setstartMinute] = useState('');\r\n    const [endMinute, setendMinute] = useState('');\r\n    const [startSecond, setstartSecond] = useState('');\r\n    const [endSecond, setendSecond] = useState('');\r\n    \r\n\r\n    return (\r\n        <div className=\"input-form\">\r\n            <h2>Input Details</h2>\r\n            <form  onSubmit={(e)=>handleSubmit(e)} className=\"form\">\r\n                <div className=\"date-duration\">\r\n                    <label htmlFor=\"date-duration\" className=\"form-label\">Select Day, Date, Time</label>\r\n                    <p className=\"input-info\">The vehicle data will be analyzed, averaged and graphed as per the specified day, month or year time interval. <br/> <br/> Eg : Between 1/2/2020 and 3/2/2020 </p>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>YEAR</th>\r\n                                <th>MONTH</th>\r\n                                <th>DAY</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p>Enter the start and end year in YYYY format</p>\r\n                                    <input onChange={(e)=>{setstartYear(e.target.value)}} value={startYear} required type=\"number\" min='2001' max='2020' name=\"start-year\" id=\"start-year\" className=\"form-input\" placeholder=\"Eg : 2019\"/>\r\n                                    <input onChange={(e)=>{setendYear(e.target.value)}} value={endYear} required type=\"number\" min='2001' max='2020' name=\"end-year\" id=\"end-year\" className=\"form-input\" placeholder=\"Eg : 2020\"/>\r\n                                </td>\r\n                                <td>\r\n                                    <p>Enter the start and end month in MM format</p>\r\n                                    <input onChange={(e)=>{setstartMonth(e.target.value)}} value={startMonth}  type=\"number\" min='1' max='12' name=\"start-month\" id=\"start-month\" className=\"form-input\" placeholder=\"Eg : 02\"/>\r\n                                    <input onChange={(e)=>{setendMonth(e.target.value)}} value={endMonth}  type=\"number\" min='1' max='12' name=\"end-month\" id=\"end-month\" className=\"form-input\" placeholder=\"Eg : 03\"/>\r\n                                </td>\r\n                                <td>\r\n                                    <p>Enter the start and end day in DD format</p>\r\n                                    <input onChange={(e)=>{setstartDay(e.target.value)}} value={startDay}  type=\"number\" min='1' max='28' name=\"start-day\" id=\"start-day\" className=\"form-input\" placeholder=\"Eg : 01\"/>\r\n                                    <input onChange={(e)=>{setendDay(e.target.value)}} value={endDay}  type=\"number\" min='1' max='28' name=\"end-day\" id=\"end-day\" className=\"form-input\" placeholder=\"Eg : 18\"/>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"vehicle-id\">\r\n                    <label htmlFor=\"vehicle-id\" className=\"form-label\">Select Vehicle(s)</label>\r\n                    <p className=\"input-info\">Enter start and end vehicle IDs of the range of vehicles that you wish to evaluate </p>\r\n                    <div className=\"vehicle-inputs\">\r\n                        <label htmlFor=\"start-vehicle-id\" className=\"form-label\">Set Start Vehicle ID</label>\r\n                        <label htmlFor=\"end-vehicle-id\" className=\"form-label\">Set End Vehicle ID</label>\r\n                        <input onChange={(e)=>{setstartVehicleId(e.target.value)}} value={startVehicleId} required type=\"text\" name=\"start-vehicle-id\" id=\"start-vehicle-id\" className=\"form-input\" placeholder=\"Eg : EV20201\"/>\r\n                        <input onChange={(e)=>{setendVehicleId(e.target.value)}} value={endVehicleId} required type=\"text\" name=\"end-vehicle-id\" id=\"end-vehicle-id\" className=\"form-input\" placeholder=\"Eg : EV20203\"/>\r\n                    </div>\r\n                    <p className=\"input-info\" > <br/> Eg : For range = EV20201, EV20202, EV20203 <br/>\r\n                    Start Vehicle ID = EV20201 <br/> End Vehicle ID = EV20203 </p>\r\n                </div>                \r\n                <div className=\"time-duration\">\r\n                    <p className=\"form-label\">Select Time Duration</p>\r\n                    <p className=\"input-info\">Given a day, the data can be visualized differently as per different time intervals. For date durations bigger than day, entire day's data will be returned <br/> <br/> Eg : Between 14:30:30 and 15:30:00 on 13/12/2020 </p>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>HOUR</th>\r\n                                <th>MINUTE</th>\r\n                                <th>SECOND</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p>Enter the start and end hour in HH format</p>\r\n                                    <input onChange={(e)=>{setstartHour(e.target.value)}} value={startHour}  type=\"number\" min='01' max='24' name=\"start-hr\" id=\"start-hr\" className=\"form-input\" placeholder=\"Eg : 02\"/>\r\n                                    <input onChange={(e)=>{setendHour(e.target.value)}} value={endHour}  type=\"number\" min='01' max='24' name=\"end-hr\" id=\"end-hr\" className=\"form-input\" placeholder=\"Eg : 16\"/>\r\n                                </td>\r\n                                <td>\r\n                                    <p>Enter the start and end minute in MM format</p>\r\n                                    <input onChange={(e)=>{setstartMinute(e.target.value)}} value={startMinute}  type=\"number\" min='1' max='60' name=\"start-min\" id=\"start-min\" className=\"form-input\" placeholder=\"Eg : 02\"/>\r\n                                    <input onChange={(e)=>{setendMinute(e.target.value)}} value={endMinute}  type=\"number\" min='1' max='60' name=\"end-min\" id=\"end-min\" className=\"form-input\" placeholder=\"Eg : 03\"/>\r\n                                </td>\r\n                                <td>\r\n                                    <p>Enter the start and end second in SS format</p>\r\n                                    <input onChange={(e)=>{setstartSecond(e.target.value)}} value={startSecond}  type=\"number\" min='1' max='60' name=\"start-sec\" id=\"start-sec\" className=\"form-input\" placeholder=\"Eg : 01\"/>\r\n                                    <input onChange={(e)=>{setendSecond(e.target.value)}} value={endSecond}  type=\"number\" min='1' max='60' name=\"end-sec\" id=\"end-sec\" className=\"form-input\" placeholder=\"Eg : 18\"/>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"submit-n-err\">\r\n                    <div className=\"error-box\">This is where errors will be shown</div>        \r\n                    <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import {SET_X_DETAILS, SET_GRAPH_DETAILS} from \"./actionTypes\"\r\n\r\nexport const updateXDetails = (xDetails) => ({\r\n    type:SET_X_DETAILS, \r\n    payload:xDetails\r\n})\r\n\r\nexport const updateGraphDetails = (graph) => ({\r\n    type:SET_GRAPH_DETAILS, \r\n    payload:{graph}\r\n})","// import store from '../reducers/store'\r\n\r\n// FOR DEVELOPMENT\r\n// let url = 'http://localhost:5000'\r\n\r\n// FOR PRODUCTION\r\nlet url = 'https://rfr-21-dashboard.herokuapp.com'\r\n\r\nexport const makeQuery = async(dataRqst) => {\r\n    // console.log(dataRqst);\r\n    // console.log(store.getState());\r\n    const body = JSON.stringify(dataRqst);\r\n    // console.log(body);\r\n    try {\r\n        const response = await fetch(`${url}/api`,{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:body\r\n        })\r\n        const data = await response.json();\r\n        return data;\r\n        // console.log(JSON.parse(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n","import { Line, Bar } from 'react-chartjs-2';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeQuery } from '../functions/makeQuery'\r\nimport store from '../reducers/store'\r\n\r\nexport default function Chart1() {\r\n    const [labels, setLabels] = useState([])\r\n    const [datasets, setDatasets] = useState([])\r\n    const chartData = {\r\n        labels: labels,\r\n        datasets: datasets\r\n    }   \r\n\r\n    useEffect(() =>\r\n    {\r\n        const unsubscribe = store.subscribe(() =>\r\n        {\r\n            // console.log('Store was just updated !')\r\n            const requestBody = store.getState(); \r\n            // console.log(requestBody)\r\n            setChart(requestBody)\r\n        })\r\n        return unsubscribe;\r\n    })\r\n\r\n    \r\n    \r\n    const setChart = async (requestBody) =>\r\n    {\r\n        console.log(requestBody);\r\n        try {\r\n            const response = await makeQuery(requestBody);\r\n            console.log('response received from db', response);\r\n            const postArray = Array.from(response)\r\n            console.log(postArray)\r\n            setLabels(postArray.map(post=>post.xAxis))\r\n            if (requestBody.idRqst[0] == requestBody.idRqst[1])\r\n            {\r\n                setDatasets([{\r\n                    label: `${requestBody.plotRqst} vs time`,\r\n                    borderColor: '#30FF00',\r\n                    data:postArray.map(post => post.mean)\r\n                }])\r\n                console.log(chartData)\r\n            } else\r\n            {\r\n                setDatasets([{\r\n                    label: `1st vehicle`,\r\n                    borderColor: '#30FF00',\r\n                    data:postArray.map(post => post.min)\r\n                }, {\r\n                    label: `Intermediate vehicle`,\r\n                    borderColor: '#47d7ff',\r\n                    data:postArray.map(post => post.max)     \r\n                }, {\r\n                    label: `Last Vehicle`,\r\n                    borderColor: '#4747ff',\r\n                    data:postArray.map(post => post.mean)\r\n                }])\r\n                console.log(chartData)\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message);            \r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"chart-1-container\">\r\n            <Line\r\n                data={chartData}\r\n                height={325}\r\n                width={850}\r\n                options={{\r\n                maintainAspectRatio: false, \r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {ENERGY_REGEN,SOC, BATTERY_TEMP, DIST_TRAVELLED, ENERGY_CONS, DISCHARGE_CYCLES} from '../reducers/graphTypes'\r\nimport {updateGraphDetails} from '../reducers/actionCreators'\r\nimport store from '../reducers/store'\r\nimport Chart1 from '../charts/Chart1'\r\n\r\nexport default function Graph() { \r\n    const handleClick = (string) => {\r\n        console.log(string);\r\n        store.dispatch(updateGraphDetails(string))\r\n    }\r\n\r\n    return (\r\n        <div  className=\"graph-container\">\r\n            <h2>GRAPH</h2>\r\n            <table className=\"graph-info\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"left-top\">Meaning</th>\r\n                    <th>Y-Axis</th>\r\n                    <th className=\"right-top\">X-Axis</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>Indicates battery charge remaining over time</td>\r\n                    <td>SOC (State of charge)</td>\r\n                    <td>Time</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Indicates energy gained while braking over time</td>\r\n                    <td>E Regen</td>\r\n                    <td>Time</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Indicates temperature of battery over time</td>\r\n                    <td>Battery temp</td>\r\n                    <td>Time</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Indicates energy consumed over time</td>\r\n                    <td>E cons</td>\r\n                    <td>Time</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Indicates distance travelled over time</td>\r\n                    <td>Dist travelled</td>\r\n                    <td>Time</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"left-bottom\">Indicates number of charging, discharging events over time</td>\r\n                    <td>Discharge cycles</td>\r\n                    <td className=\"right-bottom\">Time</td>\r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n            <div className=\"graph\">\r\n                <div className=\"graph-plot section-1\">\r\n                    <h3>Graph Plot</h3>\r\n                    <div className=\"canvas-container\">\r\n                        <Chart1/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"graph-options section-2\">\r\n                    <h3>Choose a graph</h3>\r\n                    <div className=\"choose-graph\">\r\n                        <button onClick={()=>handleClick(SOC)} className=\"graph-btn\"><FontAwesomeIcon icon=\"bolt\"></FontAwesomeIcon>&nbsp; SOC <span>VS</span> time</button>\r\n                        <button onClick={()=>handleClick(BATTERY_TEMP)} className=\"graph-btn\"><FontAwesomeIcon icon=\"car-battery\"></FontAwesomeIcon>&nbsp; Battery temp <span>VS</span> time</button>\r\n                        <button onClick={()=>handleClick(ENERGY_REGEN)} className=\"graph-btn\"><FontAwesomeIcon icon=\"atom\"></FontAwesomeIcon>&nbsp; E Regen <span>VS</span> time</button>\r\n                        <button onClick={()=>handleClick(DIST_TRAVELLED)} className=\"graph-btn\"><FontAwesomeIcon icon=\"directions\"></FontAwesomeIcon>&nbsp; Dist travelled <span>VS</span> time </button>\r\n                        <button onClick={()=>handleClick(ENERGY_CONS)} className=\"graph-btn\"><FontAwesomeIcon icon=\"battery-half\"></FontAwesomeIcon>&nbsp; Energy cons <span>VS</span> time </button>\r\n                        <button onClick={()=>handleClick(DISCHARGE_CYCLES)} className=\"graph-btn\"><FontAwesomeIcon icon=\"spinner\"></FontAwesomeIcon>&nbsp; Discharge cycles <span>VS</span> time</button>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {Bar } from 'react-chartjs-2';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeQuery } from '../functions/makeQuery'\r\nimport store from '../reducers/store'\r\n\r\nexport default function Chart2() {\r\n    const [labels, setLabels] = useState([])\r\n    const [datasets, setDatasets] = useState([])\r\n    const chartData = {\r\n        labels: labels,\r\n        datasets: datasets\r\n    }   \r\n\r\n    useEffect(() =>\r\n    {\r\n        const unsubscribe = store.subscribe(() =>\r\n        {\r\n            const requestBody = store.getState(); \r\n            setChart(requestBody)\r\n        })\r\n        return unsubscribe;\r\n    })\r\n\r\n    \r\n    \r\n    const setChart = async (requestBody) =>\r\n    {\r\n        console.log(requestBody);\r\n        try {\r\n            const response = await makeQuery(requestBody);\r\n            console.log('response received from db', response);\r\n            const postArray = Array.from(response)\r\n            console.log(postArray)\r\n            setLabels(postArray.map(post=>post.xAxis))\r\n            if (requestBody.idRqst[0] == requestBody.idRqst[1])\r\n            {\r\n                setDatasets([{\r\n                    label: `${requestBody.plotRqst} vs time`,\r\n                    borderColor: '#30FF00',\r\n                    data:postArray.map(post => post.mean)\r\n                }])\r\n                console.log(chartData)\r\n            } else\r\n            {\r\n                setDatasets([{\r\n                    label: `1st vehicle`,\r\n                    borderColor: '#30FF00',\r\n                    data:postArray.map(post => post.min)\r\n                }, {\r\n                    label: `Intermediate vehicle`,\r\n                    borderColor: '#47d7ff',\r\n                    data:postArray.map(post => post.max)     \r\n                }, {\r\n                    label: `Last Vehicle`,\r\n                    borderColor: '#4747ff',\r\n                    data:postArray.map(post => post.mean)\r\n                }])\r\n                console.log(chartData)\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message);            \r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"chart-1-container\">\r\n            <Bar\r\n                data={chartData}\r\n                height={300}\r\n                width={800}\r\n                options={{\r\n                maintainAspectRatio: false, \r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {Line, Radar, Pie, Polar} from 'react-chartjs-2'\r\nimport { makeQuery } from '../functions/makeQuery'\r\nimport store from '../reducers/store'\r\n\r\nexport default function GraphPlot() {\r\n    const [labels, setLabels] = useState([])\r\n    const [datasets, setDatasets] = useState([])\r\n    const chartData = {\r\n        labels: labels,\r\n        datasets: datasets\r\n    }   \r\n\r\n    useEffect(() =>\r\n    {\r\n        const unsubscribe = store.subscribe(() =>\r\n        {\r\n            const requestBody = store.getState(); \r\n            setChart(requestBody)\r\n        })\r\n        return unsubscribe;\r\n    })\r\n\r\n    \r\n    \r\n    const setChart = async (requestBody) =>\r\n    {\r\n        console.log(requestBody);\r\n        try {\r\n            const response = await makeQuery(requestBody);\r\n            console.log('response received from db', response);\r\n            const postArray = Array.from(response)\r\n            console.log(postArray)\r\n            setLabels(postArray.map(post=>post.xAxis))\r\n            if (requestBody.idRqst[0] == requestBody.idRqst[1])\r\n            {\r\n                setDatasets([{\r\n                    label: `${requestBody.plotRqst} vs time`,\r\n                    borderColor: '#30FF00',\r\n                    data:postArray.map(post => post.mean)\r\n                }])\r\n                console.log(chartData)\r\n            } else\r\n            {\r\n                setDatasets([{\r\n                    label: `1st vehicle`,\r\n                    borderColor: '#30FF00',\r\n                    data:postArray.map(post => post.min)\r\n                }, {\r\n                    label: `Intermediate vehicle`,\r\n                    borderColor: '#47d7ff',\r\n                    data:postArray.map(post => post.max)     \r\n                }, {\r\n                    label: `Last Vehicle`,\r\n                    borderColor: '#4747ff',\r\n                    data:postArray.map(post => post.mean)\r\n                }])\r\n                console.log(chartData)\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message);            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-1-container\">\r\n        <Pie\r\n            data={chartData}\r\n            height={325}\r\n            width={800}\r\n            options={{\r\n                maintainAspectRatio: false,\r\n            }}\r\n        />            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport Chart3 from '../charts/Chart3'\r\nimport GraphPlot from '../charts/GraphPlot'\r\n\r\nexport default function Conclusion() {\r\n    return (\r\n        <div className=\"conclusion\">\r\n            <h2>CONCLUSION</h2>\r\n            <div className=\"graph-conclude\">\r\n                <div className=\"graph-plot section-2\">\r\n                    <h3>Analysis</h3> \r\n                    <div className=\"canvas-container\">\r\n                        <GraphPlot/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"graph-plot section-1\">\r\n                    <h3>Result</h3>\r\n                    <div className=\"canvas-container\">\r\n                        <Chart3/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Model() {\r\n    return (\r\n        <div className=\"model-container\">\r\n            <h2>Model</h2>\r\n            <div className=\"model\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import { config } from '@fortawesome/fontawesome-svg-core'\r\nimport React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            The Dashboard Project. By <a className=\"by-rfr\" target=\"_blank\" rel=\"noreferrer\" href={config.url}> &nbsp; Raftar Formula Racing, IIT Madras </a>\r\n        </div>\r\n    )\r\n}\r\n","import {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCarBattery, faBatteryHalf, faSpinner, faDirections, faAtom, faBolt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faCarBattery, faBatteryHalf, faSpinner, faDirections, faAtom, faBolt)","import React, {useContext} from 'react'\r\nimport store from '../reducers/store'\r\n\r\n\r\nconst ChartContext = React.createContext();\r\n\r\nexport function useChart()\r\n{\r\n    useContext(ChartContext);\r\n}\r\n\r\nexport default function ChartProvider({ children })\r\n{\r\n\r\n    return (\r\n        <ChartContext.Provider value={store.getState()}>\r\n            {children}\r\n        </ChartContext.Provider>\r\n    )\r\n}\r\n","import './styles/App.css';\nimport Navbar from './components/Navbar'\nimport Form from './components/Form'\nimport Graph from './components/Graph'\nimport Conclusion from './components/Conclusion'\nimport Model from './components/Model'\nimport Footer from './components/Footer'\nimport \"./components/FontAwesomeIcons\"\nimport ChartProvider from './context/ChartContext'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Form />\n      <ChartProvider>\n        <Graph/>\n        <Conclusion/>\n      </ChartProvider>\n      <Model/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}